//배열을 생성하고 각 원소 값을 출력하는 프로그램을 작성하시오. 
//배열 생성은 배열을 생성하여 각 원소의 인덱스 값으로 초기화하여 반환하는 메소드를 이용한다

package day08;
//클래스=필드+메소드()
public class Ch03_12 {
	//멤버 메소드
	static int[] makeArray() {
		int temp[] = new int[4];
		for (int i = 0; i < temp.length; i++) {
			temp[i] = i;
		}
		return temp;
	}
	//멤버 메소드, 클래스의 시작(main())
	//접근지정자 지정자 반환형 메소드(매개변수타입 변수명){실행문;}
	public static void main(String[] args) {
		int iArr[];
		iArr = makeArray();//반환형, 리턴값 과 결과값의 타입이 같아야한다. 
		for(int i=0;i<iArr.length;i++) {
			System.out.printf("%d ",iArr[i]);
		}
	}
}
//static 필드, 메소드(); 일때 접근 방법(정적메모리, 클래스 필드, 클래스 메소드라고 부름)
//클래스명.메소드(); //(O)같은 클래스 내, 다른클래스, 메소드();//(O) 같은 클래스내에서만 가능
//객체생성 : ReturnArray intArray = new ReturnArray();
//객체사용 : 1. 	객체명.메소드(); 객체명.필드; 클래스명.메소드명(); 클래스명.필드명
//			2. 	필드명;, 메소드명(); 
//				같은 클래스에서 접근 경우 모두 적용가능
//				다른 클래스에서 접근 1.번만 사용가능
		
//non-static 필드, 메소드(); 일때 접근방법(동적메모리, 인스턴스필드, 인스턴스 메소드라고 부름)
//객체마다 개별적으로 사용할 메모리가 없어서 생성해야함
//객체생성 : 클래스명(타입) 객체명 = new 클래스명(); 
//			ex) ReturnArrat intArray=new ReturnArray();
//객체사용 : 1. 객체명.메소드(); 객체명.필드; 사용가능 // 클래스명.메소드명(); 클래스명.필드명 사용안됨.		
//			2.	필드명; 메소드명(); 사용안됨.
//intArray.makeArray();
//생성자도 메소드 이다 차이점은 리턴타입이 없다
//객체를 생성하고 클래스멤버 필드들을 초기화는 목적이 있다
//클래스명으로 생성자를 지정한다
//접근지정자가 기본이 public 이다 예외) private : 객체 생성 불가, 싱글톤패턴을 이용해서 객체생성